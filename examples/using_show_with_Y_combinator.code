// implementation of map in "pure" lambda

list = \f.\x.\y. if (x>y) nil (x : f (x+1) y) .
map = \m.\f.\xs. if (xs=nil) nil (f (fst xs) : m f (snd xs)) .
concat = \c.\xss. if (xss=nil) "" (fst xss ^ c (snd xss)) .

main = Y concat (Y map show (Y list 0 5)) . // Y-Combinator application
